# Do not modify this file!  It was generated by ‘nixos-generate-config’
# and may be overwritten by future invocations.  Please make changes
# to /etc/nixos/configuration.nix instead.
{ config, lib, pkgs, modulesPath, ... }:

{
  imports =
    [ (modulesPath + "/installer/scan/not-detected.nix")
    ];

  boot.initrd.availableKernelModules = [ "xhci_pci" "thunderbolt" "nvme" "usb_storage" "sd_mod" "rtsx_pci_sdmmc" ];
  boot.initrd.kernelModules = [ ];
  #boot.initrd.kernelModules = [ "xe" ];
  #boot.kernelModules = [ "kvm-intel" ];
  boot.kernelModules = [ "vfio_pci" "vfio" "vfio_iommu_type1" "vfio_virqfd" "kvm-intel" ];
  boot.extraModulePackages = [ ];
  #boot.kernelParams = [ "i915.enable_psr=0" ];
  boot.kernelParams = [ "i915.enable_psr=0" "intel_iommu=on" "iommu=pt" ];
  boot.extraModprobeConfig = "options vfio-pci ids=10de:28b9";

  fileSystems."/" =
    { device = "/dev/disk/by-uuid/e165f63d-c25d-4d8b-b7be-a422b045cae1";
      fsType = "btrfs";
      options = [ "subvol=@" ];
    };

  boot.initrd.luks.devices."luks-339fb433-88c0-498a-9e45-257e5deea386".device = "/dev/disk/by-uuid/339fb433-88c0-498a-9e45-257e5deea386";

  fileSystems."/boot" =
    { device = "/dev/disk/by-uuid/9057-5630";
      fsType = "vfat";
      options = [ "fmask=0077" "dmask=0077" ];
    };

  swapDevices = [ ];

  # Enables DHCP on each ethernet and wireless interface. In case of scripted networking
  # (the default) this is the recommended approach. When using systemd-networkd it's
  # still possible to use this option, but it's recommended to use it in conjunction
  # with explicit per-interface declarations with `networking.interfaces.<interface>.useDHCP`.
  networking.useDHCP = lib.mkDefault true;
  # networking.interfaces.enp0s31f6.useDHCP = lib.mkDefault true;
  # networking.interfaces.wlp0s20f3.useDHCP = lib.mkDefault true;

  nixpkgs.hostPlatform = lib.mkDefault "x86_64-linux";
  hardware.cpu.intel.updateMicrocode = lib.mkDefault config.hardware.enableRedistributableFirmware;
}
